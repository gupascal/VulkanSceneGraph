name: CI

on:
  push:
    branches: [ master, ci ]
  pull_request:
    branches: [ master, ci ]

jobs:
  linux-build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Install Vulkan SDK
      run: |
        ( wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add - )
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.131-bionic.list http://packages.lunarg.com/vulkan/1.2.131/lunarg-vulkan-1.2.131-bionic.list
        sudo apt update
        sudo apt install vulkan-sdk
    - name: CMake
      run: cmake .
    - name: make
      run: make -j 2

  windows-build:

    runs-on: windows-latest
    env:
      CACHEDIR: cache-dir
      VULKAN_SDK: .\vulkan-sdk-1.2.131.2

    steps:
    - uses: actions/checkout@v2
    - name: Cache
      id: cache
      uses: actions/cache@v1.1.2
      with:
        path: $CACHEDIR
        key: vulkan-sdk
    - name: Download Vulkan SDK
      if: steps.cache.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        if (!(Test-Path -Path $CACHEDIR )){
          New-Item -ItemType directory -Path $CACHEDIR
          Write-Output "New folder created"
        }
        wget https://sdk.lunarg.com/sdk/download/1.2.131.2/windows/VulkanSDK-1.2.131.2-Installer.exe?u= -OutFile vulkan-sdk-1.2.131.2.exe
#    - name: Install Vulkan SDK
#      shell: powershell
#      run: .\vulkan-sdk-1.2.131.2.exe /S
#    - name: Check Vulkan SDK installation
#      shell: powershell
#      run: |
#        ls -R -d 1 .\vulkan-sdk-1.2.131.2
#        ( gci env:* | sort-object name )
#        Write-Output "::set-env name=VULKAN_SDK::C:\\VulkanSDK\\1.2.131.2"
#        setx /M VULKAN_SDK C:\VulkanSDK\1.2.131.2
#    - name: CMake
#      run: cmake . -G "Visual Studio 16 2019" -A x64
#    - name: MSBuild
#      run: MSBuild.exe VSG.sln
